@page "/Profile"

@attribute [Authorize]
@inject ISuggestionData suggestionData
@inject AuthenticationStateProvider authProvider
@inject IUserData userData
@inject NavigationManager navManager

<h1 class="page-heading text-uppercase mb-4">My Profile</h1>
<div class="row">
   <div class="col-12 close-button-section">
       <button class="btn btn-close"  @onclick="ClosePage">x</button>
   </div>
</div>
<div class="form-layout mb-3">
    <h2 class="my-submission-heading">My Account</h2>
    <p class="my-submission-text">
        <a href="MicrosoftIdentity/Account/EditProfile">
            Edit my Profile
            </a>
            </p>
</div>
@if(approved?.Count>0)
{
     <div class="form-layout mb-3">
        <h2 class="my-submission-heading">Approved Suggestions</h2>
        <p class="my-submission-text">These are your suggestions that are currently active</p>

        @foreach(var s in approved)
        {
            
           <hr class="my-submission-seperator" />
           <div class="fw-bold suggestion-detail-suggestion">
                @s.Suggestion
           </div>
           <p class="my-submission-text">@s.DateCreated.ToString("MM.dd.yyyyy")</p>
           <p class="my-submission-text">Total Votes : @s.UserVotes.Count</p>
           <p class="my-submission-text">@s.Category.CategoryName</p>
           <p class="my-submission-text">@s.Description</p>
                @if(s.SuggestionStatus is not null)
                {
                    <div class="fw-bold suggestion-detail-suggestion">
                       @s.SuggestionStatus.StatusName
                    </div>
                    <p class="my-submission-text"> @((MarkupString)s.OwnerNotes) </p>
                }
    
        }
</div>
}
@if(archived?.Count>0)
{
     <div class="form-layout mb-3">
        <h2 class="my-submission-heading">Archived Suggestions</h2>
        <p class="my-submission-text">These are your suggestions that are currently active</p>

        @foreach(var s in archived)
        {
              <hr class="my-submission-seperator" />
           <div class="fw-bold suggestion-detail-suggestion">
                @s.Suggestion
           </div>
           <p class="my-submission-text">@s.DateCreated.ToString("MM.dd.yyyyy")</p>
           <p class="my-submission-text">Total Votes : @s.UserVotes.Count</p>
           <p class="my-submission-text">@s.Category.CategoryName</p>
           <p class="my-submission-text">@s.Description</p>
                @if(s.SuggestionStatus is not null)
                {
                    <div class="fw-bold suggestion-detail-suggestion">
                       @s.SuggestionStatus.StatusName
                    </div>
                    <p class="my-submission-text"> @((MarkupString)s.OwnerNotes) </p>
                }

     
        }
</div>
}
@if(pending?.Count>0)
{
     <div class="form-layout mb-3">
        <h2 class="my-submission-heading">Pending Suggestions</h2>
        <p class="my-submission-text">These are your suggestions that are currently active</p>

        @foreach(var s in pending)
        {
           <hr class="my-submission-seperator" />
           <div class="fw-bold suggestion-detail-suggestion">
                @s.Suggestion
           </div>
           <p class="my-submission-text">@s.DateCreated.ToString("MM.dd.yyyyy")</p>
           <p class="my-submission-text">Total Votes : @s.UserVotes.Count</p>
           <p class="my-submission-text">@s.Category.CategoryName</p>
           <p class="my-submission-text">@s.Description</p>
                @if(s.SuggestionStatus is not null)
                {
                    <div class="fw-bold suggestion-detail-suggestion">
                       @s.SuggestionStatus.StatusName
                    </div>
                    <p class="my-submission-text"> @((MarkupString)s.OwnerNotes) </p>
                }
        }
</div>
}
@if(rejected?.Count>0)
{
     <div class="form-layout mb-3">
        <h2 class="my-submission-heading">Rejected Suggestions</h2>
        <p class="my-submission-text">These are your suggestions that are currently active</p>

        @foreach(var s in rejected)
        {
           <hr class="my-submission-seperator" />
           <div class="fw-bold suggestion-detail-suggestion">
                @s.Suggestion
           </div>
           <p class="my-submission-text">@s.DateCreated.ToString("MM.dd.yyyyy")</p>
           <p class="my-submission-text">Total Votes : @s.UserVotes.Count</p>
           <p class="my-submission-text">@s.Category.CategoryName</p>
           <p class="my-submission-text">@s.Description</p>
                @if(s.SuggestionStatus is not null)
                {
                    <div class="fw-bold suggestion-detail-suggestion">
                       @s.SuggestionStatus.StatusName
                    </div>
                    <p class="my-submission-text"> @((MarkupString)s.OwnerNotes) </p>
                }
        }
</div>
}


@code {
    private UserModel loggedInUser;
    private List<SuggestionModel> submissions;
    private List<SuggestionModel> approved;
    private List<SuggestionModel> archived;
    private List<SuggestionModel> pending;
    private List<SuggestionModel> rejected;

    protected async override Task OnInitializedAsync()
    {
        loggedInUser = await authProvider.GetUserFromAuth(userData);

        var results = await suggestionData.GetUserSuggestions(loggedInUser.Id);

        if(loggedInUser is not null && results is not null)
        {
            submissions = results.OrderByDescending(s => s.DateCreated).ToList();
            approved = results.Where(x => x.ApprovedForRelease && x.Archived == false & x.Rejected== false).ToList();
            archived = results.Where(x => x.Archived && x.Rejected == false).ToList();
            pending = results.Where(x => x.ApprovedForRelease == false && x.Rejected == false).ToList();
            rejected = results.Where(x => x.Rejected == true).ToList();
        }

    }
    private void ClosePage()
    {
        navManager.NavigateTo("/");
    }
}
