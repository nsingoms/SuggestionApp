@page "/create"
@using SuggestionAppUI.Models


@inject AuthenticationStateProvider authProvider
@inject ICategoryData categoryData
@inject ISuggestionData suggestionData
@inject NavigationManager navManager
@inject IUserData userData
@attribute [Authorize]

<h1 class="page-heading text-uppercase mb-4">Make A Suggestion</h1>
<div class="row justify-content-center create-form">
    <div class="col-xl-8 col-lg-10 form-layout">
        <div class="close-button-section">
            <button class="btn btn-close" @onclick="ClosePage"></button>
        </div>
        @if(categories is not null)
        {
              <EditForm Model="suggestion" OnValidSubmit="CreateSuggestion">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <ValidationSummary></ValidationSummary>
            <div class="input-section">
                <label class="form-label fw-bold text-uppercase" for="suggestion-text">Suggestion</label>
                <div class="input-description">Focus on the topic or technology you want to learn about</div>
                <InputText class="form-control" id="suggestion-text" @bind-Value="suggestion.Suggestion"></InputText>
            </div>
            <div>
                <label class="form-label fw-bold text-uppercase" for="category">Category</label>
                <div class="input-description">Choose One Category</div>
                <div class="col-lg-8">
                    <MyInputRadioGroup id="category" @bind-Value="suggestion.CategoryId">
                        @foreach(var c in categories)
                        {
                            <div class="radio-item-group">
                                <InputRadio Value="@c.Id" id="@c.Id"></InputRadio>
                                <label class="form-label fw-bold text-uppercase" for="@c.Id" >@c.CategoryName - @c.CategoryDescription</label>
                            </div>
                        }
                    </MyInputRadioGroup>
                </div>
            </div>
            
              <div class="input-section">
                <label class="form-label fw-bold text-uppercase" for="Description">Description</label>
                <div class="input-description">Briefly describe your suggestion</div>
                <InputTextArea class="form-control" id="Description" @bind-Value="suggestion.Description"></InputTextArea>
            </div>
            <div class="center-children">
                <button class="btn btn-main btn-lg text-uppercase" type="submit">Suggest</button>
            </div>
        </EditForm>
        }
      
    </div>
</div>

@code {
    private CreateSuggestionModel suggestion = new();
    private List<CategoryModel> categories;
    private UserModel loggedInUser;

    protected async override Task OnInitializedAsync()
    {
        categories = await categoryData.GetAllCategories();

        loggedInUser = await authProvider.GetUserFromAuth(userData);
    }
    private void ClosePage()
    {
        navManager.NavigateTo("/");
    }

    private async Task CreateSuggestion()
    {
        SuggestionModel suggestionModel = new SuggestionModel();
        suggestionModel.Suggestion = suggestion.Suggestion;
        suggestionModel.Description = suggestion.Description;
        suggestionModel.Author = new BasicUserModel(loggedInUser);
        suggestionModel.Category = categories.Where(c => c.Id == suggestion.CategoryId).FirstOrDefault();


        if(suggestionModel.Category is null)
        {
            suggestion.CategoryId= "";
            return;
        }
        await suggestionData.CreateSuggestion(suggestionModel);
        suggestion = new();
        ClosePage();
    }
}
